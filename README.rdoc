= Shoe

You probably don't want to use shoe -- especially if you're like me!

I like tinkering with my build scripts, so I made shoe, even though
hoe[http://seattlerb.rubyforge.org/hoe] and
jeweler[http://github.com/technicalpickles/jeweler] are awesome.

== Behold

Here's how your +Rakefile+ looks:

 require 'shoe'
 require 'my_project/version'

 Shoe.tie('my_project', MyProject::VERSION, "This is my project, and it's awesome!") do |spec|
   # do whatever you want with the Gem::Specification here, for example:
   # spec.add_runtime_dependency 'dnssd'
 end

And here's what you get, at most:

 rake clean         # Remove ignored files
 rake compile       # Compile C extensions
 rake cucumber:ok   # Run features
 rake cucumber:wip  # Run work-in-progress features
 rake default       # Run features
 rake gemspec       # Show latest gemspec contents
 rake rdoc          # Generate documentation
 rake release       # Release myproject-0.1.0
 rake shell         # Run an irb console
 rake test          # Run tests

Most of the time, though, you won't see all of these: when possible, tasks are
conditionally defined.

See what I mean by reading <tt>Shoe#define_tasks</tt>.

== Getting Started

=== With Bundler[http://github.com/carlhuda/bundler]

1. Start with just shoe in your +Gemfile+:

    source :gemcutter
    gem 'shoe'

2. Open a sub-shell configured for the bundler environment:

    $ bundle exec $SHELL

   (See BUNDLER.rdoc if you run into trouble with <tt>`bundle exec`</tt>.)

3. Use +shoe+ to generate some skeleton project files:

    $ shoe

4. And then you can poke around with

    $ rake -T

=== Without Bundler

If you're not using bundler, it's probably best not to use the +shoe+
generator. Instead, just install shoe normally:

 $ gem install shoe

And then <tt>require 'shoe'</tt> and add a <tt>Shoe.tie</tt> clause to your +Rakefile+:

 Shoe.tie('my_project', '0.0.0', 'My project is awesome.') do |spec|
   # spec.add_runtime_dependency 'dnssd' # or whatever...
 end

Shoe also assumes you have a <tt>README.rdoc</tt>, so you'll need to create one if you
want to avoid warnings running <tt>`rake rdoc`</tt>.
