$:.unshift File.expand_path('../lib', __FILE__)
require '<%= project_name %>'

# Feel free to change whatever you like! This file is yours now.
Gem::Specification.new do |spec|
  spec.name    = '<%= project_name %>'
  spec.version = <%= project_module %>::VERSION

  spec.summary = '<%= project_module %> is one of my favorite things!'
  spec.description = <<-END.gsub(/^ */, '')
    #{spec.summary}

    Further description here.
  END

  spec.author = '<%= `git config --get user.name`.chomp %>'
  spec.email  = '<%= `git config --get user.email`.chomp %>'
  spec.homepage = 'http://github.com/<%= `git config --get github.user`.chomp %>/<%= project_name %>'

  # You may find these helpful:
  # spec.requirements = ['git'] # If your library shells out to git
  # spec.required_rubygems_version = ">= 1.3.6" # If you depend on prerelease gems
  # spec.add_bundler_dependencies # I'm not sure how to use this yet...
  # spec.add_runtime_dependency 'nokogiri' # Or what have you
  spec.add_development_dependency 'shoe'

  # This may not be the best way to select files for inclusion in your gem, but
  # it does at least honor your .gitignore, keeping that bit of your
  # configuration DRY. Alternatively, you could use more explicit Dir.glob
  # patterns or even try reading a Manifest file, hoe-style.
  def spec.git_files(glob=nil)
    `git ls-files -z --cached --other --exclude-standard #{glob}`.split("\0")
  end

  # The kooky &File.method(:basename) trick keeps us from accidentally
  # shadowing a variable named "file" in the context that evaluates this
  # gemspec. I actually ran into this problem with Bundler!
  spec.files            = spec.git_files
  spec.executables      = spec.git_files('bin/*').map &File.method(:basename)
  spec.extensions       = spec.git_files('ext/**/extconf.rb')
  spec.extra_rdoc_files = spec.git_files('{,**/}*.rdoc')
  spec.test_files       = spec.git_files('test/{,**/}*_test.rb')

  spec.rdoc_options = %W(
    --main README.rdoc
    --title #{spec.full_name}
    --inline-source
    --webcvs http://github.com/<%= `git config --get github.user`.chomp %>/<%= project_name %>/blob/v#{spec.version}/
  )
end
