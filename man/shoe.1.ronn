shoe(1) -- generate a RubyGems project
======================================

## SYNOPSIS

`shoe` [-`adehtv`] [_path_]

## DESCRIPTION

The `shoe` command generates a new RubyGems project. Big deal, right? As
compared with other tools, `shoe` gently guides you toward hygenic packaging
standards and provides you with a sweet [shoe(3)](shoe.3.html) library of
on-demand `rake(1)` tasks built around your (authoritative) gemspec.

## OPTIONS

By default, `shoe` generates a basic library, its `Rakefile`, and some
`Test::Unit` tests in the current directory. (You may pass a different _path_
on the command line, if you like.)

To generate additional files, use the following options:

* `-a`, `--[no-]application`:
  Generate a command-line application. Create a simple executable script in
  the `bin` directory and an `optparse`-based `Application` class.

* `-d`, `--[no-]data`:
  Generate a data directory. Create a `data` directory (perfect for HTML
  templates and other static assets) and a `datadir` method in your top-level
  module to access it.

* `-e`, `--[no-]extension`:
  Generate a C extension. Create an `ext` directory with an `extconf.rb` and
  a bare-bones `extension.c` defining a module named `Extension`.

* `-t`, `--[no-]test-unit`:
  Generate Test::Unit tests. Create a `test` directory with a `helper.rb`
  and a single passing test.

`shoe` also responds to the following standard options:

* `-h`, `--help`:
  Print a help message and exit.

* `-v`, `--version`[=all]:
  Print `shoe`'s version number and exit. If `=all` is given, also print
  version numbers of `shoe`'s dependencies.

## AUTHOR

Matthew Todd, [matthewtodd](http://github.com/matthewtodd) on GitHub. Do drop
me a line if you use `shoe` -- I'd love to hear from you!

## SEE ALSO

[shoe(3)](shoe.3.html),
<http://chneukirchen.github.com/rps/>,
<http://gembundler.com/>,
<http://defunkt.github.com/rip/>,
<http://github.com/rtomayko/rpg>
